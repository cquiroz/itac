<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:security="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:util="http://www.springframework.org/schema/util"
        default-autowire="no"
        default-lazy-init="false"
        default-merge="false"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">
    <!-- Wire up MVC annotations -->
    <!-- <tx:annotation-driven/> -->

    <bean id="errorMap" class="java.util.Collections" factory-method="synchronizedMap">
        <constructor-arg index="0">
            <util:map map-class="java.util.HashMap"/>
        </constructor-arg>
    </bean>

    <bean class="edu.gemini.tac.itac.web.TacExceptionHandler">

    </bean>


    <!-- Import the service-layer configuration -->
    <import resource="classpath:services-applicationContext.xml"></import>

    <!-- component-scan detects annotations @Component, @Controller, @Service etc. -->
    <context:component-scan annotation-config="true" base-package="edu.gemini.tac.itac.web" use-default-filters="true"/>

    <!-- View Resolvers -->
    <bean autowire="default" autowire-candidate="default"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="viewResolver" lazy-init="default">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <bean autowire="default" autowire-candidate="default"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"
          lazy-init="default">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize">
            <value>1000000000</value>
        </property>
    </bean>

    <bean id="userDetailsService"
          class="edu.gemini.tac.service.UserDetailsServiceImplementation">
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <!-- SpEL voter -->
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </property>

    </bean>

    <bean id="zipArchiveView" class="edu.gemini.tac.itac.web.committees.ZipArchiveView"/>

    <security:http  use-expressions="true" access-decision-manager-ref="accessDecisionManager">
        <security:form-login
                login-processing-url="/j_spring_security_check"
                login-page="/login.jsp"
                authentication-failure-url="/login.jsp?login_error=t"
                default-target-url="/tac/home.jsp"
        />
        <security:intercept-url pattern="/login.jsp" filters="none" access="hasRole('ROLE_ANONYMOUS')"/>

        <security:logout logout-success-url="/static/goodbye.html"/>

        <security:intercept-url pattern="/" filters="none"/>
        <security:intercept-url pattern="/static/**" filters="none"/>
        <security:intercept-url pattern="/static/**" filters="none"/>
        <security:intercept-url pattern="/resources/**" filters="none"/>
        <security:intercept-url pattern="/favicon.ico" filters="none"/>
        <security:intercept-url pattern="/tac/home.jsp"
                                        access="hasRole('ROLE_COMMITTEE_MEMBER') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/committees/**/joints/create" access="hasRole('ROLE_JOINT_PROPOSAL_ADMIN') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/committees/**/queues/create" access="hasRole('ROLE_QUEUE_WRITER') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/committees/**/queues/**/manual" access="hasRole('ROLE_QUEUE_WRITER') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/committees/**/queues/**/finalize" access="hasRole('ROLE_QUEUE_WRITER') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/committees/**"
                                access="hasRole('ROLE_COMMITTEE_MEMBER') or hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/tac/configuration/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_SECRETARY')"/>
        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService"/>
    </security:authentication-manager>

</beans>